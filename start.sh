#!/bin/bash

set -e

# Variables
DOCKER_COMPOSE_FILE="docker-compose.yml"
HOSTS_FILE="/etc/hosts"
START_MARKER="# Generated by project"
END_MARKER="# End of section"
PROJECT_PATH=$(pwd)

# Fonction pour ajouter des entrées dans le fichier /etc/hosts
add_host_entry() {
    local hostname=$1

    echo "127.0.0.1 $hostname" | sudo tee -a "$HOSTS_FILE" > /dev/null
}

# Fonction pour analyser le fichier docker-compose.yml et ajouter les entrées de noms d'hôtes
parse_docker_compose() {
    local compose_file=$1
    local services=$(yq e '.services | keys' "$compose_file" | sed -e 's/- //g' -e 's/\[//g' -e 's/\]//g' -e 's/,//g')

    for service in $services; do
        local host=$(yq e ".services.$service.labels[0]" "$compose_file" | cut -d '`' -f 2)
        # if $host is different from ""
        if [ -n "$host"  ] && [ $host != "null" ]; then
            add_host_entry "$host"
        fi
    done
}

# Fonction pour créer le réseau Docker externe
create_docker_network() {
    local network_name=$1
    if ! docker network ls | grep -q "$network_name"; then
        docker network create "$network_name"
    fi
}

# Fonction pour supprimer les entrées précédemment générées
remove_previous_entries() {
    if grep -q "$START_MARKER" "$HOSTS_FILE"; then
        sudo sed -i '' -e "/$START_MARKER/,/$END_MARKER/d" "$HOSTS_FILE" >/dev/null 2>&1 || true
    fi
}

# Fonction principale
main() {
    # Vérification de yq
    if ! command -v yq &> /dev/null; then
        echo "yq pourrait ne pas être installé. Installation..."
        brew install yq
    fi

    # Création du réseau Docker
    create_docker_network "web"

    # Supprimer les entrées précédemment générées
    remove_previous_entries

    # Supprimer les anciens certificats
    rm -rf ./.letsencrypt

    # Ajouter les nouveaux marqueurs de début
    echo "$START_MARKER $PROJECT_PATH" | sudo tee -a "$HOSTS_FILE" > /dev/null

    # Parse docker-compose et ajouter les entrées de noms d'hôtes
    parse_docker_compose "$DOCKER_COMPOSE_FILE"

    # Ajouter les marqueurs de fin
    echo "$END_MARKER" | sudo tee -a "$HOSTS_FILE" > /dev/null

    # Construire les images et démarrer les services
    docker-compose up --build
}

main
